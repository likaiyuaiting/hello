一，定义
当进程退出并且父进程（使用wait()系统调用）没有读取到子进程退出的返回代码时就会产生僵尸进程。僵尸进程会以终止状态保持在进程表中，并且会一直在等待父进程读取退出状态代码。
简单来说就是，在父进程中有一个子进程，该子进程完成父进程交给的任务，子进程完成后会给父进程一个任务结果返回，但父进程一直没有理会。使得子进程很尴尬的挂着，不能释放，一直等父进程查看结果，而产生的僵尸进程。
二，模拟实现一个僵尸进程
test.c文件

#include<stdio.h>
#include<unistd.h>
#include<stdlib.h>

int main(viod)
{
    pid_t pid=getpid();
    pid_t id=fork();
    if(id==-1)
    {
        printf("fork error!!!\n");
    }
    else if(id==0)
    {
        printf("child pid is:%d\n",pid);
        exit(0);
    }
    else
    {
        while(1)
        {
            printf("father pid is:%d\n",id);
            sleep(1);
        }
    }
    return 0;
}

当我们运行该test.c程序时

gcc test.c -o test
./test

